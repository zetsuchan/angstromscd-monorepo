/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Audio, Image } from "@boundaryml/baml"

/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
	? { [P in keyof T]?: RecursivePartialNull<T[P]> }
	: T | null;

export interface Checked<T, CheckName extends string = string> {
	value: T;
	checks: Record<CheckName, Check>;
}

export interface Check {
	name: string;
	expr: string;
	status: "succeeded" | "failed";
}

/**
 * Determines whether all validation checks have succeeded.
 *
 * @param checks - A record of validation checks keyed by name.
 * @returns `true` if every check has a status of `"succeeded"`; otherwise, `false`.
 */
export function all_succeeded<CheckName extends string>(
	checks: Record<CheckName, Check>,
): boolean {
	return get_checks(checks).every((check) => check.status === "succeeded");
}

/**
 * Converts a record of validation checks into an array of {@link Check} objects.
 *
 * @param checks - A record mapping check names to {@link Check} objects.
 * @returns An array containing all {@link Check} objects from the input record.
 */
export function get_checks<CheckName extends string>(
	checks: Record<CheckName, Check>,
): Check[] {
	return Object.values(checks);
}
export interface Resume {
	name: string;
	email: string;
	experience: string[];
	skills: string[];
}
