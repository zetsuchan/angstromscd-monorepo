/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  ChatResponseWithTools,  Citation,  E2BCodeRequest,  MedicalInsight,  Resume,  Tool,  ToolCall,  ToolType } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
  value: T
  state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    export interface ChatResponseWithTools {
      message?: string | null
      requires_tools?: boolean | null
      tool_calls: ToolCall[]
      citations: Citation[]
    }
    export interface Citation {
      title?: string | null
      authors: string[]
      journal?: string | null
      year?: number | null
      pmid?: string | null
      doi?: string | null
      relevance_score?: number | null
    }
    export interface E2BCodeRequest {
      code?: string | null
      description?: string | null
      packages: string[]
      expected_output?: string | null
    }
    export interface MedicalInsight {
      summary?: string | null
      key_findings: string[]
      citations: Citation[]
      recommendations: string[]
      confidence_level?: string | null
    }
    export interface Resume {
      name?: string | null
      email?: string | null
      experience: string[]
      skills: string[]
    }
    export interface Tool {
      type?: types.ToolType | null
      name?: string | null
      description?: string | null
    }
    export interface ToolCall {
      tool?: types.ToolType | null
      arguments?: string | null
      reasoning?: string | null
    }
}